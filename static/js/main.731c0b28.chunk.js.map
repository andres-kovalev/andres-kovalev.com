{"version":3,"sources":["components/App/App.module.scss","components/Canvas/Pixel.module.scss","components/Logo/Logo.module.scss","consts/links.js","components/Canvas/helper.js","components/Canvas/Pixel.js","components/Canvas/Canvas.js","components/Logo/Logo.js","consts/secondary-logo.js","consts/primary-logo.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","type","label","href","maxLength","max","length","getProps","rows","width","height","numberOfPixels","items","map","line","row","split","char","column","isSpace","filter","Boolean","reduce","reduced","concat","current","push","Array","random","array","newArray","i","item","j","shuffle","key","color","Math","round","Pixel","scale","className","cx","styles","pixel","cy","r","fill","Canvas","image","minPixels","pixels","useRef","lines","viewBox","aria-label","props","Logo","useState","isSecondary","setIsSecondary","toggle","useCallback","oldIsSecondary","useEffect","interval","setInterval","clearInterval","logo","App","class","main","content","info","text","link","bold","links","linkItem","filler","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.731c0b28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__aDOxM\",\"content\":\"App_content__11LHs\",\"filler\":\"App_filler__2nLQk\",\"info\":\"App_info__2O2rD\",\"linkItem\":\"App_linkItem__2RdmN\",\"link\":\"App_link__LYvb9\",\"bold\":\"App_bold__1Vxbs\",\"github\":\"App_github__1r6Oz\",\"stackoverflow\":\"App_stackoverflow__1DN0p\",\"linkedin\":\"App_linkedin__1qpHd\",\"npm\":\"App_npm__DCbWQ\",\"facebook\":\"App_facebook__CnPnL\",\"mail\":\"App_mail__EstDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pixel\":\"Pixel_pixel__NhtBI\",\"shake-0\":\"Pixel_shake-0__CzOt6\",\"shake\":\"Pixel_shake__1Q4PR\",\"shake-1\":\"Pixel_shake-1__2h-K5\",\"shake-2\":\"Pixel_shake-2__wA6B0\",\"shake-3\":\"Pixel_shake-3__1AayB\",\"shake-4\":\"Pixel_shake-4__3H7nZ\",\"shake-5\":\"Pixel_shake-5__3cNpK\",\"shake-6\":\"Pixel_shake-6__359Jn\",\"shake-7\":\"Pixel_shake-7__1IY1p\",\"shake-8\":\"Pixel_shake-8__12etP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__3IG6m\"};","export default [\n    {\n        type: 'linkedin',\n        label: 'LinkedIn',\n        href: 'https://www.linkedin.com/in/andres-kovalev/?locale=en_US'\n    },\n    { type: 'npm', label: 'NPM', href: 'https://www.npmjs.com/~andres-kovalev' },\n    {\n        type: 'github',\n        label: 'GitHub',\n        href: 'https://github.com/andres-kovalev'\n    },\n    {\n        type: 'stackoverflow',\n        label: 'StackOverflow',\n        href: 'https://stackoverflow.com/users/11898502/andres'\n    },\n    {\n        type: 'facebook',\n        label: 'Facebook',\n        href: 'https://www.facebook.com/andres.kovalev'\n    }\n];\n","export function maxLength(max, { length }) {\n    return length > max ? length : max;\n}\n\nexport function getProps(rows, width, height, numberOfPixels) {\n    const items = rows.map(\n        (line, row) =>\n            line\n                .split('')\n                .map((char, column) => (isSpace(char) ? null : [ row, column, 'black' ]))\n                .filter(Boolean)\n    ).reduce(\n        (reduced, items) => reduced.concat(items), []\n    );\n\n    if (items.length > numberOfPixels.current) {\n        // eslint-disable-next-line no-param-reassign\n        numberOfPixels.current = items.length;\n    } else {\n        items.push(\n            ...[ ...Array(numberOfPixels.current - items.length) ].map(() => [\n                random(height),\n                random(width),\n                'transparent'\n            ])\n        );\n    }\n\n    return shuffle(items).map(([ row, column, color ], key) => ({\n        key,\n        row,\n        column,\n        color\n    }));\n}\n\nfunction isSpace(char) {\n    return char === ' ';\n}\n\nexport function random(max) {\n    return Math.round(Math.random() * max);\n}\n\nfunction shuffle(array) {\n    const newArray = [ ...array ];\n    const { length } = newArray;\n    for (let i = length - 1; i > -1; i--) {\n        const item = newArray[i];\n        const j = random(i);\n\n        newArray[i] = newArray[j];\n        newArray[j] = item;\n    }\n\n    return newArray;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport styles from './Pixel.module.scss';\n\nimport { random } from './helper';\n\nfunction Pixel({ row, column, color, scale = 1 }) {\n    return (\n        <circle\n            className={cx(styles.pixel, styles[`shake-${ random(9) }`])}\n            cx={column * scale + 5}\n            cy={row * scale}\n            r=\"4.5\"\n            fill={color}\n        />\n    );\n}\n\nPixel.propTypes = {\n    row: PropTypes.number.isRequired,\n    column: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    scale: PropTypes.number\n};\n\nexport default Pixel;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { maxLength, getProps } from './helper';\nimport Pixel from './Pixel';\n\nfunction Canvas({ label, image, minPixels = 0, scale = 10, className }) {\n    const pixels = useRef(minPixels);\n    const lines = image.split('\\n');\n    const width = lines.reduce(maxLength, 0);\n    const height = lines.length;\n\n    return (\n        <svg\n            viewBox={`0 0 ${ width * scale } ${ height * scale }`}\n            aria-label={ label }\n            className={ className }\n        >\n            {getProps(lines, width, height, pixels).map((props) => (\n                <Pixel {...props} scale={ scale } />\n            ))}\n        </svg>\n    );\n}\n\nCanvas.propTypes = {\n    label: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    minPixels: PropTypes.number,\n    scale: PropTypes.number,\n    className: PropTypes.string\n};\n\nexport default Canvas;\n","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styles from './Logo.module.scss';\n\nimport Canvas from '../Canvas';\nimport primaryText from '../../consts/primary-logo';\nimport secondaryText from '../../consts/secondary-logo';\n\nfunction Logo() {\n    const [ isSecondary, setIsSecondary ] = useState(false);\n    const toggle = useCallback(\n        () => setIsSecondary((oldIsSecondary) => !oldIsSecondary),\n        []\n    );\n\n    useEffect(() => {\n        const interval = setInterval(toggle, 4000);\n\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Canvas\n            label=\"Andres Kovalev - Front-End developer\"\n            className={ styles.logo }\n            image={ isSecondary ? secondaryText : primaryText }\n            minPixels={ 250 }\n        />\n    );\n}\n\nexport default Logo;\n","export default `\n #### ###   ##  #  # #####   #### #  # ###\n #    #  # #  # ## #   #     #    ## # #  #\n ###  ###  #  # # ##   #  ## ###  # ## #  #\n #    # #  #  # #  #   #     #    #  # #  #\n #    #  #  ##  #  #   #     #### #  # ###\n\n\n###  #### #  # #### #     ##  ###  #### ###\n#  # #    #  # #    #    #  # #  # #    #  #\n#  # ###  #  # ###  #    #  # ###  ###  ###\n#  # #    # #  #    #    #  # #    #    # #\n###  #### ##   #### ####  ##  #    #### #  #\n`;\n","export default `\n        ##  #  # ###  ###  ####  ###\n       #  # ## # #  # #  # #    #\n       #### # ## #  # ###  ###   ##\n       #  # #  # #  # # #  #       #\n       #  # #  # ###  #  # #### ###\n\n\n     #  #  ##  #  #  ##  #    #### #  #     \n     # #  #  # #  # #  # #    #    #  #\n     ##   #  # #  # #### #    ###  #  #\n     # #  #  # # #  #  # #    #    # #\n     #  #  ##  ##   #  # #### #### ##\n`;\n","import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './App.module.scss';\n\nimport links from '../../consts/links';\nimport Logo from '../Logo';\n\nfunction App() {\n    return (\n        <main class={styles.main}>\n            <section className={styles.content}>\n                <h3 className={styles.info}>\n          Thinking about content for this page\n                </h3>\n                <p className={styles.text}>\n          in the meantime\n                    {' '}\n                    <a href=\"mailto:mail@andres-kovalev.com\" className={cx(styles.link, styles.bold)}>\n            mail me\n                    </a>\n                    {' '}\n          or look for me here:\n                </p>\n                <ul>\n                    {links.map(({ type, label, href }) => (\n                        <li className={cx(styles.linkItem, styles[type])} key={type}>\n                            <a href={href} className={styles.link}>\n                                {label}\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n            </section>\n            <section className={styles.filler}>\n                <Logo />\n            </section>\n        </main>\n    );\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}